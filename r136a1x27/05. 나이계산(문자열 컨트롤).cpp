/* 
주민등록증의 번호가 주어지면 주민등록증 주민의 나이와 성별을 판단하여 출력하는 프로그램을 작성하세요. 
주민등록증의 번호는 -를 기준으로 앞자리와 뒷자리로 구분된다.
뒷자리의 첫 번째 수가 1이면 1900년대생 남자, 2이면 1900년대생 여자, 3이면 2000년대생 남자, 4이면 2000년대생 여자이다.
올해는 2019년입니다. 해당 주민등록증 주민의 나이와 성별을 출력하세요.
*/


// 입력설명: 첫 줄에 주민등록증 번호가 입력됩니다.
// 출력설명: 첫 줄에 나이와 성별을 구분으로 출력하세요. 성별은 남자는 M(man) 여자는 W(woman)으로 출력한다

// 입력예제1 780316-2376152 / 출력예제1 42 W
// 입력예제2 061102-3575393 / 출력예제2 14 M

/*--알고리즘 생각해보기--(강사)
012345-6______
먼저 back 첫글자[7]로 (1)출생연도 앞 2자리(19 or 20)을 나눈다
2019 - (1)*100 - front 앞 두글자[0]*10+[1] + 1 하면 나이가 나온다.

(2) back 첫글자[7]으로 성별을 구별한다.
*/

/*--알고리즘 생각해보기--(나)
'-'를 기준으로 파싱하여 front, back으로 나눈다 => 파싱 대신 index로 접근하면 된다.
012345-7______
먼저 back 첫글자[7]로 (1)성별과 (2)출생연도 앞 2자리(19 or 20)을 나눈다
(2)를 사용해서 
2019 - (2)*100 - front 앞 두글자[0]*10+[1] + 1 하면 나이가 나온다.
*/

// 사실 지금 성능을 생각하기엔...너무 간단한 문제가 아닌가 하고 생각...

#include <stdio.h> // 왜 C언어로 하는건지...
using namespace std;
int main()
{
    freopen("input.txt", "rt", stdin);
    char a[20];
    int year, age;
    scanf("%s", &a);

    // 나이 구하기
    if(a[7]='1' || a[7]=='2'){
        year=1900 + ((a[0]-48) * 10 + (a[1]-48)); // ASCII 코드에서 원래 숫자로 변환하기 위해 -48
    }
    else {
        year = 2000 + ((a[0]-48) * 10 + (a[1]-48)); 
    }
    age = 2018 - year + 1;
    printf("%d", age);

    // 성별 구하기
    if(a[7] == '1' || a[7] == '3'){
        printf("M\n");
    }
    else{
        printf("W\n");
    }

    
    
    return 0;
}
